---
apiVersion: v1
kind: Service
metadata:
  name: sanaa-server
  namespace: default
  labels:
    app: sanaa
    role: server
spec:
  selector:
    app: sanaa
    role: server
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sanaa-server
  namespace: default
  labels:
    app: sanaa
    role: server
---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: sanaa-server
  namespace: default
  labels:
    app: sanaa
    role: server
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sanaa
      role: server
  template:
    metadata:
      labels:
        app: sanaa
        role: server
    spec:
      serviceAccountName: sanaa-server
      containers:
        - name: server
          image: kingori/sanaa:0.2.0
          args:
            - server
            - --binding-port=80
            - --redis-host=sanaa-redis.default.svc.cluster.local
            - --request-ttl=300
            - --verbose
          ports:
            - name: http
              containerPort: 80
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "some-key"
            - name: AWS_SECRET_ACCESS_KEY
              value: "some-secret"
            - name: AWS_REGION
              value: "some-region"
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 150m
              memory: 256Mi
